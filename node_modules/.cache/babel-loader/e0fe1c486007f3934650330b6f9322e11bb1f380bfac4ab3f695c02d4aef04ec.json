{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\merce\\\\interactivos2\\\\polos_desarrollo\\\\src\\\\components\\\\InfoBox\\\\InfoBox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport './InfoBox.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InfoBox = ({\n  title,\n  subtitle,\n  sections,\n  onToggle\n}) => {\n  _s();\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const headerRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `info-box ${isCollapsed ? 'collapsed' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-box-header\",\n      ref: headerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), subtitle && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"info-box-subtitle\",\n        children: subtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"hamburger\",\n        onClick: () => setIsCollapsed(!isCollapsed),\n        \"aria-label\": isCollapsed ? 'Expandir panel' : 'Colapsar panel',\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-box-content\",\n      children: !isCollapsed && sections.map((section, sectionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-title-container\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-title\",\n            children: section.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), section.items.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-row\",\n          children: !item.isButton && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `shape ${item.shape}`,\n              style: {\n                backgroundColor: item.color,\n                width: 12,\n                height: 12\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '12px'\n              },\n              children: item.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 23\n            }, this), item.switch && /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"switch\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => onToggle && onToggle(item.id),\n                checked: item.checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true)\n        }, itemIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this))]\n      }, sectionIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(InfoBox, \"A2kgex2jU5D9Bn5yJId8gi4X+IY=\");\n_c = InfoBox;\nexport default InfoBox;\nvar _c;\n$RefreshReg$(_c, \"InfoBox\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","InfoBox","title","subtitle","sections","onToggle","_s","isCollapsed","setIsCollapsed","headerRef","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","section","sectionIndex","items","item","itemIndex","isButton","shape","style","backgroundColor","color","width","height","fontSize","label","switch","type","onChange","id","checked","_c","$RefreshReg$"],"sources":["C:/Users/merce/interactivos2/polos_desarrollo/src/components/InfoBox/InfoBox.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport './InfoBox.css';\n\ntype LegendItem = {\n  id: string;\n  label: string;\n  color: string;\n  shape: 'circle' | 'square';\n  size?: number;\n  switch?: boolean;\n  defaultChecked?: boolean;\n  checked?: boolean;\n  isButton?: boolean;\n  active?: boolean;\n  onClick?: () => void;\n};\n\nexport type InfoBoxSection = {\n  title: string;\n  switch?: boolean;\n  defaultChecked?: boolean;\n  items: LegendItem[];\n};\n\ntype InfoBoxProps = {\n  title: string;\n  subtitle?: string;\n  sections: InfoBoxSection[];\n  onToggle?: (label: string) => void;\n};\n\nconst InfoBox: React.FC<InfoBoxProps> = ({ title, subtitle, sections, onToggle }) => {\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const headerRef = useRef<HTMLDivElement | null>(null);\n\n  return (\n    <div className={`info-box ${isCollapsed ? 'collapsed' : ''}`}>\n      <div className=\"info-box-header\" ref={headerRef}>\n        <h2>{title}</h2>\n        {subtitle && <p className=\"info-box-subtitle\">{subtitle}</p>}\n        <button\n          className=\"hamburger\"\n          onClick={() => setIsCollapsed(!isCollapsed)}\n          aria-label={isCollapsed ? 'Expandir panel' : 'Colapsar panel'}\n        >\n          â˜°\n        </button>\n      </div>\n\n      <div className=\"info-box-content\">\n        {!isCollapsed &&\n          sections.map((section, sectionIndex) => (\n            <div key={sectionIndex} className=\"legend-section\">\n              <div className=\"legend-title-container\">\n                <span className=\"legend-title\">{section.title}</span>\n              </div>\n              {section.items.map((item, itemIndex) => (\n                <div key={itemIndex} className=\"legend-row\">\n                  {!item.isButton && (\n                    <>\n                      <div\n                        className={`shape ${item.shape}`}\n                        style={{ backgroundColor: item.color, width: 12, height: 12 }}\n                      ></div>\n                      <span style={{ fontSize: '12px' }}>{item.label}</span>\n                      {item.switch && (\n                        <label className=\"switch\">\n                          <input\n                            type=\"checkbox\"\n                            onChange={() => onToggle && onToggle(item.id)}\n                            checked={item.checked}\n                          />\n                          <span className=\"slider\"></span>\n                        </label>\n                      )}\n                    </>\n                  )}\n                </div>\n              ))}\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default InfoBox;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}